global
    log         127.0.0.1 local0
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon
    stats socket /var/lib/haproxy/stats level admin
    tune.ssl.default-dh-param 2048
    maxconn 500000


defaults
   mode                    http
   log                     global
   option                  httplog
   option                  dontlognull
   option http-server-close
   option forwardfor       except 127.0.0.0/8
   option                  redispatch
   retries                 3
   timeout http-request    10s
   timeout queue           1m
   timeout connect         10s
   timeout client          1m
   timeout server          1m
   timeout http-keep-alive 10s
   timeout check           10s
   maxconn                 3000

frontend http-in
    bind :80 alpn h2,http/1.1

    stick-table type ip size 100k expire 20s store conn_rate(5s),http_req_rate(5s)
    http-request track-sc0 src
    http-request add-header X-Haproxy-Throttle yes if { sc_http_req_rate(0) gt 150 }

    #acls
    #http-request deny if request_abuser
    http-request del-header Proxy

    #backend
    use_backend be_slowdown_chump if { req.fhdr(X-Haproxy-Throttle) -m found }
    default_backend be_localhost_www

frontend https-in
    bind *:443 ssl crt /etc/ssl/wildcard.pem force-tlsv12

    stick-table type ip size 100k expire 20s store conn_rate(5s),http_req_rate(5s)
    http-request track-sc0 src

    http-request add-header X-Haproxy-Throttle yes if { sc_http_req_rate(0) gt 150 }

    http-request add-header X-Forwarded-Proto https
    #http-response add-header Strict-Transport-Security max-age=31536000;\ includeSubDomains
    #http-response add-header Public-Key-Pins pin-sha256="";\ max-age=5184000;\ includeSubDomains

    #acls
    #acl request_abuser req.fhdr(X-Haproxy-Throttle) -m found
    #http-request deny if request_abuser
    http-request del-header Proxy

    #backends
    use_backend be_slowdown_chump if { req.fhdr(X-Haproxy-Throttle) -m found }

    #backend specific to hostnames
    use_backend be_passwordmanager if { hdr(host) -i pwmanager.mydomain.edu }
    use_backend be_localhost_wwws if { hdr(host) -i www.mydomain.edu }
    default_backend be_localhost_default


frontend stats
    bind 0.0.0.0:8080
    mode http
    stats enable
    stats uri /
    stats admin if TRUE
    stats show-desc Shiny Load Balancer Node
    stats show-legends
    stats auth  mmdeveloper:supersecretpasswordhere

backend be_localhost_www
    mode http
    maxconn 500000
    balance roundrobin
    option redispatch
    option forwardfor
    option http-server-close
    server web1 127.0.0.1:1080 check inter 4s weight 1 rise 3

backend be_passwordmanager
    mode http
    balance roundrobin
    option forwardfor
    server node0 prod-pwmanager-node0.internaldomain.net:443 check inter 4s ssl verify none

backend be_localhost_wwws
    mode http
    maxconn 500000
    balance roundrobin
    option redispatch
    option forwardfor
    option http-server-close
    server web1 127.0.0.1:10443 check inter 4s weight 1 rise 3

backend be_localhost_default
    mode http
    errorfile 503 /usr/share/haproxy/default.http

backend be_slowdown_chump
    mode http
    timeout tarpit 15s
    http-request tarpit
    errorfile 500 /usr/share/haproxy/ratelimit.http
    errorfile 503 /usr/share/haproxy/ratelimit.http
    errorfile 504 /usr/share/haproxy/ratelimit.http