user  nginx;
### One worker process per CPU                                       ###
worker_processes  auto;


error_log  /var/log/nginx/error.log;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

pid        /var/run/nginx.pid;


events {
    use epoll;
    multi_accept on;

    ### $(ulimit -n) connections per worker process                          ###
    worker_connections  4096;
}

### same as worker_connections
worker_rlimit_nofile 4096;





http {
    #geoip_country /usr/share/GeoIP/GeoIP.dat;
    #map $geoip_country_code $allowed_country {
    #    default no;
    #    US yes;
    #}

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    index index.php index.html index.htm;
    server_tokens off;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    ### Caches information about open FDs, freqently accessed files. ###
    ### Changing this setting, in my environment, brought            ###
    ### performance up from 560k req/sec, to 904k req/sec.           ###
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 5;
    open_file_cache_errors off;


    ### Buffer log writes to speed up IO, or disable them altogether ###
    #access_log /var/log/nginx/access.log main buffer=16k;
    access_log off;
    log_not_found off;


    ### Sendfile copies data between one FD and other from within    ###
    ### the kernel. More efficient than read() + write(), since      ###
    ### the requires transferring data to and from the user space.   ###
    sendfile on;


    ### Tcp_nopush causes nginx to attempt to send its HTTP response ###
    ### head in one packet, instead of using partial frames. This is ###
    ### useful for prepending headers before calling sendfile, or    ###
    ### for throughput optimization.                                 ###
    tcp_nopush on;


    ### don't buffer data-sends (disable Nagle algorithm). Good for  ###
    ### sending frequent small bursts of data in real time.          ###
    tcp_nodelay on;


    ### Timeout for keep-alive connections. Server will close        ###
    ### connections after this time.                                 ###
    keepalive_timeout 13;


    ### Number of requests a client can make over the keep-alive     ###
    ### connection.                                                  ###
    keepalive_requests 5000;


    ### allow the server to close the connection after a client      ###
    ### stops responding. Frees up socket-associated memory.         ###
    reset_timedout_connection on;


    ### send the client a "request timed out" if the body is not     ###
    ### loaded by this time.                                         ###
    client_body_timeout 10;
    client_header_timeout 10;


    ### If the client stops reading data, free up the stale client   ###
    ### connection after this much time.                             ###
    send_timeout 10;


    ### gzip compression                                             ###
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_http_version 1.1;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript text/xml application/xml application/rss+xml application/atom+xml application/rdf+xml;
    gzip_buffers 16 8k;

    ### all traffic is forwarded via proxy, so use x-forwarded-for as client-ip
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 192.168.0.0/16;
    set_real_ip_from 172.16.0.0/16;
    set_real_ip_from 127.0.0.0/8;
    real_ip_header X-Forwarded-For;

    ### maintain buffer for SSL sessions to slow down disk IO
    ssl_session_cache shared:ssl_session_cache:10m;


    #add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";

    ### include vhost conf files
    include /etc/nginx/sites-enabled/*.conf;
}